{"version":3,"sources":["services/persons.js","components/PersonForm.js","components/PersonShow.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","delete","concat","PersonForm","props","react_default","a","createElement","onSubmit","addPerson","value","newName","name","onChange","e","setNewName","target","newNumber","setNewNumber","type","PersonShow","_ref","number","deletePerson","onClick","Notification","message","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","personService","initialPersons","catch","console","log","window","confirm","res","filter","person","Fragment","App_Notification","components_PersonForm","preventDefault","phone","personObject","item","i","length","toLowerCase","isDuplicate","returnedPerson","newPerson","setTimeout","map","components_PersonShow","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.73037c45.chunk.js","sourcesContent":["import axios from \"axios\";\r\n//TODO: change to relative url\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove\r\n};\r\n","import React from \"react\";\r\n\r\nconst PersonForm = props => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name:\r\n        <input\r\n          value={props.newName}\r\n          name=\"name\"\r\n          onChange={e => props.setNewName(e.target.value)}\r\n        />\r\n        Phone number\r\n        <input\r\n          value={props.newNumber}\r\n          name=\"number\"\r\n          onChange={e => props.setNewNumber(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <input type=\"submit\" value=\"add\" />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst PersonShow = ({ id, name, number, deletePerson }) => {\r\n  return (\r\n    <li>\r\n      {name}: {number}\r\n      <button onClick={() => deletePerson(id)}>delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PersonShow;\r\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport PersonShow from \"./components/PersonShow\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n};\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  //fetch from db\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons);\n      })\n      .catch(e => console.log(e));\n  }, []);\n\n  //helper function - checks if names exists\n  const isDuplicate = item => {\n    for (let i = 0; i < persons.length; i++) {\n      if (persons[i].name.toLowerCase() === item.toLowerCase()) {\n        return true;\n      }\n    }\n  };\n\n  //Add person to db\n  const addPerson = e => {\n    e.preventDefault();\n    setNewNumber(e.target.phone);\n    setNewName(e.target.name);\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n    if (isDuplicate(newName)) {\n      setErrorMessage(`${newName} is already added to phonebook`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          const newPerson = {\n            name: returnedPerson.name,\n            number: returnedPerson.number\n          };\n          setPersons(persons.concat(newPerson));\n          setErrorMessage(`${newName} has been added to phonebook`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch(e => console.log(e));\n    }\n  };\n  //delete from db\n  const deletePerson = id => {\n    //TODO: name person\n    const result = window.confirm(\n      `Are you sure you want to delete this person?`\n    );\n    if (result) {\n      personService.remove(id).then(res => {\n        setPersons(persons.filter(person => person.id !== id));\n      });\n    }\n  };\n  const rows = () =>\n    persons.map(person => (\n      <PersonShow\n        key={person.id}\n        id={person.id}\n        name={person.name}\n        number={person.number}\n        deletePerson={deletePerson}\n      />\n    ));\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <h3>Add new contact</h3>\n      <PersonForm\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        addPerson={addPerson}\n      />\n      <h3>Numbers</h3>\n      {rows()}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}